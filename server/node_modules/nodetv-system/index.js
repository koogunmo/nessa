//var git		= require('gitty'),
//	npm		= require('npm'),
var git		= require('gitty'),
	log4js	= require('log4js'),
	Q		= require('q');
	
log4js.configure({
	appenders: [{
		type: 'console'
	}],
	replaceConsole: true
});
var logger = log4js.getLogger('nodetv-system');

var system = {
	restart: function(){
		try {
			logger.info('Restarting...');
			process.kill(process.pid, 'SIGUSR2');
		} catch(e) {
			logger.error(e.message);
		}
	},
	update: function(){
		var deferred = Q.defer(), self = this, wait = Q.defer();
		try {
		//	if (!nconf.get('system:updates:enabled')) return;
			
			var repo = git(process.cwd());
			repo.pull('origin', 'nightly', function(error,status){
				if (error){
					logger.error(error);
					wait.reject(error);
				}
				if (status && status.toLowerCase().indexOf('already up-to-date') == -1){
					wait.resolve(status);
				}
				wait.reject();
			});
			
			wait.promise.then(function(success){
				// npm update?
				
				
				
				
				deferred.resolve();
				self.restart();
				
			}).catch(function(error){
				deferred.reject(error);
			});
		} catch(e) {
			logger.error(e.message);
			deferred.reject(e.message);
		}
		return deferred.promise;
	}
};
module.exports = exports = system;